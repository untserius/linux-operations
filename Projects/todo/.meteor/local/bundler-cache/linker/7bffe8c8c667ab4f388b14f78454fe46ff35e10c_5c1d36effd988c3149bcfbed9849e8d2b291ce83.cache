[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"links.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/links.js                                              //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  LinksCollection: () => LinksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n}, 0);\nconst LinksCollection = new Mongo.Collection('links');\n///////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n}, 0);\nlet LinksCollection;\nmodule.link(\"/imports/api/links\", {\n  LinksCollection(v) {\n    LinksCollection = v;\n  }\n}, 1);\nfunction insertLink(_ref) {\n  return Promise.asyncApply(() => {\n    let {\n      title,\n      url\n    } = _ref;\n    Promise.await(LinksCollection.insertAsync({\n      title,\n      url,\n      createdAt: new Date()\n    }));\n  });\n}\nMeteor.startup(() => Promise.asyncApply(() => {\n  // If the Links collection is empty, add some data.\n  if (Promise.await(LinksCollection.find().countAsync()) === 0) {\n    Promise.await(insertLink({\n      title: 'Do the Tutorial',\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app'\n    }));\n    Promise.await(insertLink({\n      title: 'Follow the Guide',\n      url: 'https://guide.meteor.com'\n    }));\n    Promise.await(insertLink({\n      title: 'Read the Docs',\n      url: 'https://docs.meteor.com'\n    }));\n    Promise.await(insertLink({\n      title: 'Discussions',\n      url: 'https://forums.meteor.com'\n    }));\n  }\n\n  // We publish the entire Links collection to all clients.\n  // In order to be fetched in real-time to the clients\n  Meteor.publish(\"links\", function () {\n    return LinksCollection.find();\n  });\n}));\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".jsx\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"fda30f81dac7860ab08aa6b68a08134d430f1fad","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/links.js","server/main.js"],"names":["module","export","LinksCollection","Mongo","link","v","Collection","Meteor","insertLink","title","url","insertAsync","createdAt","Date","startup","find","countAsync","publish"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAM,CAAC;EAACC,eAAe,EAAC,MAAIA;AAAe,CAAC,CAAC;AAAC,IAAIC,KAAK;AAACH,MAAM,CAACI,IAAI,CAAC,cAAc,EAAC;EAACD,KAAK,CAACE,CAAC,EAAC;IAACF,KAAK,GAACE,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAEzG,MAAMH,eAAe,GAAG,IAAIC,KAAK,CAACG,UAAU,CAAC,OAAO,CAAC,C;;;;;;;;;;;ACF5D,IAAIC,MAAM;AAACP,MAAM,CAACI,IAAI,CAAC,eAAe,EAAC;EAACG,MAAM,CAACF,CAAC,EAAC;IAACE,MAAM,GAACF,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAAC,IAAIH,eAAe;AAACF,MAAM,CAACI,IAAI,CAAC,oBAAoB,EAAC;EAACF,eAAe,CAACG,CAAC,EAAC;IAACH,eAAe,GAACG,CAAC;EAAA;AAAC,CAAC,EAAC,CAAC,CAAC;AAG/J,SAAeG,UAAU;EAAA,gCAAiB;IAAA,IAAhB;MAAEC,KAAK;MAAEC;IAAI,CAAC;IACtC,cAAMR,eAAe,CAACS,WAAW,CAAC;MAAEF,KAAK;MAAEC,GAAG;MAAEE,SAAS,EAAE,IAAIC,IAAI;IAAG,CAAC,CAAC;EAC1E,CAAC;AAAA;AAEDN,MAAM,CAACO,OAAO,CAAC,+BAAY;EACzB;EACA,IAAI,cAAMZ,eAAe,CAACa,IAAI,EAAE,CAACC,UAAU,EAAE,MAAK,CAAC,EAAE;IACnD,cAAMR,UAAU,CAAC;MACfC,KAAK,EAAE,iBAAiB;MACxBC,GAAG,EAAE;IACP,CAAC,CAAC;IAEF,cAAMF,UAAU,CAAC;MACfC,KAAK,EAAE,kBAAkB;MACzBC,GAAG,EAAE;IACP,CAAC,CAAC;IAEF,cAAMF,UAAU,CAAC;MACfC,KAAK,EAAE,eAAe;MACtBC,GAAG,EAAE;IACP,CAAC,CAAC;IAEF,cAAMF,UAAU,CAAC;MACfC,KAAK,EAAE,aAAa;MACpBC,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;;EAEA;EACA;EACAH,MAAM,CAACU,OAAO,CAAC,OAAO,EAAE,YAAY;IAClC,OAAOf,eAAe,CAACa,IAAI,EAAE;EAC/B,CAAC,CAAC;AACJ,CAAC,EAAC,C","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const LinksCollection = new Mongo.Collection('links');\n","import { Meteor } from 'meteor/meteor';\nimport { LinksCollection } from '/imports/api/links';\n\nasync function insertLink({ title, url }) {\n  await LinksCollection.insertAsync({ title, url, createdAt: new Date() });\n}\n\nMeteor.startup(async () => {\n  // If the Links collection is empty, add some data.\n  if (await LinksCollection.find().countAsync() === 0) {\n    await insertLink({\n      title: 'Do the Tutorial',\n      url: 'https://www.meteor.com/tutorials/react/creating-an-app',\n    });\n\n    await insertLink({\n      title: 'Follow the Guide',\n      url: 'https://guide.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Read the Docs',\n      url: 'https://docs.meteor.com',\n    });\n\n    await insertLink({\n      title: 'Discussions',\n      url: 'https://forums.meteor.com',\n    });\n  }\n\n  // We publish the entire Links collection to all clients.\n  // In order to be fetched in real-time to the clients\n  Meteor.publish(\"links\", function () {\n    return LinksCollection.find();\n  });\n});\n"]}}]