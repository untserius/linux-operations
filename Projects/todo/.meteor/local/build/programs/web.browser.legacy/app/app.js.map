{"version":3,"sources":["meteor://ðŸ’»app/imports/api/links.js","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/Hello.jsx","meteor://ðŸ’»app/imports/ui/Info.jsx","meteor://ðŸ’»app/client/main.jsx"],"names":["LinksCollection","Mongo","Collection","App","_c","$RefreshReg$","Hello","_s","useState","counter","setCounter","increment","Info","isLoading","useSubscribe","links","useFind","find","map","link","_id","url","title","Meteor","startup","container","document","getElementById","root","createRoot","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;EAEO,IAAMA,eAAe,GAAG,IAAIC,KAAK,CAACC,UAAU,CAAC,OAAO,CAAC;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECErD,IAAMC,GAAG,GAAG;IAAA,oBACjB,8CACE,gCAAI,oBAAkB,CAAI,eAC1B,oBAAC,KAAK,sBACN,oBAAC,IAAI,QAER;EAAA;EAACC,KANWD,GAAG;EAAA;EAAAE;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECFT,IAAMC,KAAK,GAAG,YAAM;IAAAC;IACzB,gBAA8BC,QAAQ,CAAC,CAAC,CAAC;MAAA;MAAlCC,OAAO;MAAEC,UAAU;IAE1B,IAAMC,SAAS,GAAG,YAAM;MACtBD,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,oBACE,8CACE;MAAQ,OAAO,EAAEE;IAAU,GAAC,UAAQ,CAAQ,eAC5C,+BAAG,4BAA0B,EAACF,OAAO,EAAC,SAAO,CAAG,CAC5C;EAEV,CAAC;EAACF,GAbWD,KAAK;EAAAF,KAALE,KAAK;EAAA;EAAAD;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECEX,IAAMO,IAAI,GAAG,YAAM;IAAAL;IACxB,IAAMM,SAAS,GAAGC,YAAY,CAAC,OAAO,CAAC;IACvC,IAAMC,KAAK,GAAGC,OAAO,CAAC;MAAA,OAAMhB,eAAe,CAACiB,IAAI,EAAE;IAAA,EAAC;IAEnD,IAAGJ,SAAS,EAAE,EAAE;MACd,oBAAO,iCAAK,YAAU,CAAM;IAC9B;IAEA,oBACE,8CACE,gCAAI,eAAa,CAAI,eACrB,gCAAKE,KAAK,CAACG,GAAG,CACZC,cAAI;MAAA,oBAAI;QAAI,GAAG,EAAEA,IAAI,CAACC;MAAI,gBACxB;QAAG,IAAI,EAAED,IAAI,CAACE,GAAI;QAAC,MAAM,EAAC;MAAQ,GAAEF,IAAI,CAACG,KAAK,CAAI,CAC/C;IAAA,EACN,CAAK,CACF;EAEV,CAAC;EAACf,GAlBWK,IAAI;IAAA,QACGE,YAAY,EAChBE,OAAO;EAAA;EAAAZ,KAFVQ,IAAI;EAAA;EAAAP;AAAA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECCjBkB,MAAM,CAACC,OAAO,CAAC,YAAM;IACnB,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IACzD,IAAMC,IAAI,GAAGC,UAAU,CAACJ,SAAS,CAAC;IAClCG,IAAI,CAACE,MAAM,eAAC,oBAAC,GAAG,OAAG,CAAC;EACtB,CAAC,CAAC;AAAA,qB","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const LinksCollection = new Mongo.Collection('links');\n","import React from 'react';\nimport { Hello } from './Hello.jsx';\nimport { Info } from './Info.jsx';\n\nexport const App = () => (\n  <div>\n    <h1>Welcome to Meteor!</h1>\n    <Hello/>\n    <Info/>\n  </div>\n);\n","import React, { useState } from 'react';\n\nexport const Hello = () => {\n  const [counter, setCounter] = useState(0);\n\n  const increment = () => {\n    setCounter(counter + 1);\n  };\n\n  return (\n    <div>\n      <button onClick={increment}>Click Me</button>\n      <p>You've pressed the button {counter} times.</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFind, useSubscribe } from 'meteor/react-meteor-data';\nimport { LinksCollection } from '../api/links';\n\nexport const Info = () => {\n  const isLoading = useSubscribe('links');\n  const links = useFind(() => LinksCollection.find());\n\n  if(isLoading()) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Learn Meteor!</h2>\n      <ul>{links.map(\n        link => <li key={link._id}>\n          <a href={link.url} target=\"_blank\">{link.title}</a>\n        </li>\n      )}</ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Meteor } from 'meteor/meteor';\nimport { App } from '/imports/ui/App';\n\nMeteor.startup(() => {\n  const container = document.getElementById('react-target');\n  const root = createRoot(container);\n  root.render(<App />);\n});\n"]}