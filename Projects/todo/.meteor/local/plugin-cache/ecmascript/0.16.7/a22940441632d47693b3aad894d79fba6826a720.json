{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/autoupdate/client_versions.js","filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/serius/Desktop/Practicals/Projects/todo","root":"/home/serius/Desktop/Practicals/Projects/todo","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/autoupdate/client_versions.js"}},"code":"let _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  ClientVersions: () => ClientVersions\n});\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n}, 0);\nclass ClientVersions {\n  constructor() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  createStore() {\n    return {\n      update: _ref => {\n        let {\n          id,\n          msg,\n          fields\n        } = _ref;\n        if (msg === \"added\" || msg === \"changed\") {\n          this.set(id, fields);\n        }\n      }\n    };\n  }\n  hasVersions() {\n    return this._versions.size > 0;\n  }\n  get(id) {\n    return this._versions.get(id);\n  }\n\n  // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  set(id, fields) {\n    let version = this._versions.get(id);\n    let isNew = false;\n    if (version) {\n      Object.assign(version, fields);\n    } else {\n      version = _objectSpread({\n        _id: id\n      }, fields);\n      isNew = true;\n      this._versions.set(id, version);\n    }\n    this._watchCallbacks.forEach(_ref2 => {\n      let {\n        fn,\n        filter\n      } = _ref2;\n      if (!filter || filter === version._id) {\n        fn(version, isNew);\n      }\n    });\n  }\n\n  // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  watch(fn) {\n    let {\n      skipInitial,\n      filter\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!skipInitial) {\n      const resolved = Promise.resolve();\n      this._versions.forEach(version => {\n        if (!filter || filter === version._id) {\n          resolved.then(() => fn(version, true));\n        }\n      });\n    }\n    const callback = {\n      fn,\n      filter\n    };\n    this._watchCallbacks.add(callback);\n    return () => this._watchCallbacks.delete(callback);\n  }\n\n  // A reactive data source for `Autoupdate.newClientAvailable`.\n  newClientAvailable(id, fields, currentVersion) {\n    function isNewVersion(version) {\n      return version._id === id && fields.some(field => version[field] !== currentVersion[field]);\n    }\n    const dependency = new Tracker.Dependency();\n    const version = this.get(id);\n    dependency.depend();\n    const stop = this.watch(version => {\n      if (isNewVersion(version)) {\n        dependency.changed();\n        stop();\n      }\n    }, {\n      skipInitial: true\n    });\n    return !!version && isNewVersion(version);\n  }\n}","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ClientVersions","Tracker","constructor","_versions","Map","_watchCallbacks","Set","createStore","update","id","msg","fields","set","hasVersions","size","get","version","isNew","Object","assign","_id","forEach","fn","filter","watch","skipInitial","resolved","Promise","resolve","then","callback","add","delete","newClientAvailable","currentVersion","isNewVersion","some","field","dependency","Dependency","depend","stop","changed"],"sources":["packages/autoupdate/client_versions.js"],"sourcesContent":["import { Tracker } from \"meteor/tracker\";\n\nexport class ClientVersions {\n  constructor() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  createStore() {\n    return {\n      update: ({ id, msg, fields }) => {\n        if (msg === \"added\" || msg === \"changed\") {\n          this.set(id, fields);\n        }\n      }\n    };\n  }\n\n  hasVersions() {\n    return this._versions.size > 0;\n  }\n\n  get(id) {\n    return this._versions.get(id);\n  }\n\n  // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  set(id, fields) {\n    let version = this._versions.get(id);\n    let isNew = false;\n\n    if (version) {\n      Object.assign(version, fields);\n    } else {\n      version = {\n        _id: id,\n        ...fields\n      };\n\n      isNew = true;\n      this._versions.set(id, version);\n    }\n\n    this._watchCallbacks.forEach(({ fn, filter }) => {\n      if (! filter || filter === version._id) {\n        fn(version, isNew);\n      }\n    });\n  }\n\n  // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  watch(fn, { skipInitial, filter } = {}) {\n    if (! skipInitial) {\n      const resolved = Promise.resolve();\n\n      this._versions.forEach((version) => {\n        if (! filter || filter === version._id) {\n          resolved.then(() => fn(version, true));\n        }\n      });\n    }\n\n    const callback = { fn, filter };\n    this._watchCallbacks.add(callback);\n\n    return () => this._watchCallbacks.delete(callback);\n  }\n\n  // A reactive data source for `Autoupdate.newClientAvailable`.\n  newClientAvailable(id, fields, currentVersion) {\n    function isNewVersion(version) {\n      return (\n        version._id === id &&\n        fields.some((field) => version[field] !== currentVersion[field])\n      );\n    }\n\n    const dependency = new Tracker.Dependency();\n    const version = this.get(id);\n\n    dependency.depend();\n\n    const stop = this.watch(\n      (version) => {\n        if (isNewVersion(version)) {\n          dependency.changed();\n          stop();\n        }\n      },\n      { skipInitial: true }\n    );\n\n    return !! version && isNewVersion(version);\n  }\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"a22940441632d47693b3aad894d79fba6826a720"}
