{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/serius/Desktop/Practicals/Projects/todo/packages/socket-stream-client/common.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/socket-stream-client/common.js","filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/socket-stream-client/common.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/serius/Desktop/Practicals/Projects/todo","root":"/home/serius/Desktop/Practicals/Projects/todo","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"_exploded":{},"_verified":{},"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/socket-stream-client/common.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/common.js"}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  StreamClientCommon: function () {\n    return StreamClientCommon;\n  }\n});\nvar Retry;\nmodule.link(\"meteor/retry\", {\n  Retry: function (v) {\n    Retry = v;\n  }\n}, 0);\nvar forcedReconnectError = new Error(\"forced reconnect\");\nvar StreamClientCommon = /*#__PURE__*/function () {\n  function StreamClientCommon(options) {\n    this.options = _objectSpread({\n      retry: true\n    }, options || null);\n    this.ConnectionError = options && options.ConnectionError || Error;\n  }\n\n  // Register for callbacks.\n  var _proto = StreamClientCommon.prototype;\n  _proto.on = function () {\n    function on(name, callback) {\n      if (name !== 'message' && name !== 'reset' && name !== 'disconnect') throw new Error('unknown event type: ' + name);\n      if (!this.eventCallbacks[name]) this.eventCallbacks[name] = [];\n      this.eventCallbacks[name].push(callback);\n    }\n    return on;\n  }();\n  _proto.forEachCallback = function () {\n    function forEachCallback(name, cb) {\n      if (!this.eventCallbacks[name] || !this.eventCallbacks[name].length) {\n        return;\n      }\n      this.eventCallbacks[name].forEach(cb);\n    }\n    return forEachCallback;\n  }();\n  _proto._initCommon = function () {\n    function _initCommon(options) {\n      var _this = this;\n      options = options || Object.create(null);\n\n      //// Constants\n\n      // how long to wait until we declare the connection attempt\n      // failed.\n      this.CONNECT_TIMEOUT = options.connectTimeoutMs || 10000;\n      this.eventCallbacks = Object.create(null); // name -> [callback]\n\n      this._forcedToDisconnect = false;\n\n      //// Reactive status\n      this.currentStatus = {\n        status: 'connecting',\n        connected: false,\n        retryCount: 0\n      };\n      if (Package.tracker) {\n        this.statusListeners = new Package.tracker.Tracker.Dependency();\n      }\n      this.statusChanged = function () {\n        if (_this.statusListeners) {\n          _this.statusListeners.changed();\n        }\n      };\n\n      //// Retry logic\n      this._retry = new Retry();\n      this.connectionTimer = null;\n    }\n    return _initCommon;\n  }() // Trigger a reconnect.\n  ;\n  _proto.reconnect = function () {\n    function reconnect(options) {\n      options = options || Object.create(null);\n      if (options.url) {\n        this._changeUrl(options.url);\n      }\n      if (options._sockjsOptions) {\n        this.options._sockjsOptions = options._sockjsOptions;\n      }\n      if (this.currentStatus.connected) {\n        if (options._force || options.url) {\n          this._lostConnection(forcedReconnectError);\n        }\n        return;\n      }\n\n      // if we're mid-connection, stop it.\n      if (this.currentStatus.status === 'connecting') {\n        // Pretend it's a clean close.\n        this._lostConnection();\n      }\n      this._retry.clear();\n      this.currentStatus.retryCount -= 1; // don't count manual retries\n      this._retryNow();\n    }\n    return reconnect;\n  }();\n  _proto.disconnect = function () {\n    function disconnect(options) {\n      options = options || Object.create(null);\n\n      // Failed is permanent. If we're failed, don't let people go back\n      // online by calling 'disconnect' then 'reconnect'.\n      if (this._forcedToDisconnect) return;\n\n      // If _permanent is set, permanently disconnect a stream. Once a stream\n      // is forced to disconnect, it can never reconnect. This is for\n      // error cases such as ddp version mismatch, where trying again\n      // won't fix the problem.\n      if (options._permanent) {\n        this._forcedToDisconnect = true;\n      }\n      this._cleanup();\n      this._retry.clear();\n      this.currentStatus = {\n        status: options._permanent ? 'failed' : 'offline',\n        connected: false,\n        retryCount: 0\n      };\n      if (options._permanent && options._error) this.currentStatus.reason = options._error;\n      this.statusChanged();\n    }\n    return disconnect;\n  }() // maybeError is set unless it's a clean protocol-level close.\n  ;\n  _proto._lostConnection = function () {\n    function _lostConnection(maybeError) {\n      this._cleanup(maybeError);\n      this._retryLater(maybeError); // sets status. no need to do it here.\n    }\n    return _lostConnection;\n  }() // fired when we detect that we've gone online. try to reconnect\n  // immediately.\n  ;\n  _proto._online = function () {\n    function _online() {\n      // if we've requested to be offline by disconnecting, don't reconnect.\n      if (this.currentStatus.status != 'offline') this.reconnect();\n    }\n    return _online;\n  }();\n  _proto._retryLater = function () {\n    function _retryLater(maybeError) {\n      var timeout = 0;\n      if (this.options.retry || maybeError === forcedReconnectError) {\n        timeout = this._retry.retryLater(this.currentStatus.retryCount, this._retryNow.bind(this));\n        this.currentStatus.status = 'waiting';\n        this.currentStatus.retryTime = new Date().getTime() + timeout;\n      } else {\n        this.currentStatus.status = 'failed';\n        delete this.currentStatus.retryTime;\n      }\n      this.currentStatus.connected = false;\n      this.statusChanged();\n    }\n    return _retryLater;\n  }();\n  _proto._retryNow = function () {\n    function _retryNow() {\n      if (this._forcedToDisconnect) return;\n      this.currentStatus.retryCount += 1;\n      this.currentStatus.status = 'connecting';\n      this.currentStatus.connected = false;\n      delete this.currentStatus.retryTime;\n      this.statusChanged();\n      this._launchConnection();\n    }\n    return _retryNow;\n  }() // Get current status. Reactive.\n  ;\n  _proto.status = function () {\n    function status() {\n      if (this.statusListeners) {\n        this.statusListeners.depend();\n      }\n      return this.currentStatus;\n    }\n    return status;\n  }();\n  return StreamClientCommon;\n}();","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","StreamClientCommon","Retry","forcedReconnectError","Error","options","retry","ConnectionError","on","name","callback","eventCallbacks","push","forEachCallback","cb","length","forEach","_initCommon","Object","create","CONNECT_TIMEOUT","connectTimeoutMs","_forcedToDisconnect","currentStatus","status","connected","retryCount","Package","tracker","statusListeners","Tracker","Dependency","statusChanged","changed","_retry","connectionTimer","reconnect","url","_changeUrl","_sockjsOptions","_force","_lostConnection","clear","_retryNow","disconnect","_permanent","_cleanup","_error","reason","maybeError","_retryLater","_online","timeout","retryLater","bind","retryTime","Date","getTime","_launchConnection","depend"],"sources":["packages/socket-stream-client/common.js"],"sourcesContent":["import { Retry } from 'meteor/retry';\n\nconst forcedReconnectError = new Error(\"forced reconnect\");\n\nexport class StreamClientCommon {\n  constructor(options) {\n    this.options = {\n      retry: true,\n      ...(options || null),\n    };\n\n    this.ConnectionError =\n      options && options.ConnectionError || Error;\n  }\n\n  // Register for callbacks.\n  on(name, callback) {\n    if (name !== 'message' && name !== 'reset' && name !== 'disconnect')\n      throw new Error('unknown event type: ' + name);\n\n    if (!this.eventCallbacks[name]) this.eventCallbacks[name] = [];\n    this.eventCallbacks[name].push(callback);\n  }\n\n  forEachCallback(name, cb) {\n    if (!this.eventCallbacks[name] || !this.eventCallbacks[name].length) {\n      return;\n    }\n\n    this.eventCallbacks[name].forEach(cb);\n  }\n\n  _initCommon(options) {\n    options = options || Object.create(null);\n\n    //// Constants\n\n    // how long to wait until we declare the connection attempt\n    // failed.\n    this.CONNECT_TIMEOUT = options.connectTimeoutMs || 10000;\n\n    this.eventCallbacks = Object.create(null); // name -> [callback]\n\n    this._forcedToDisconnect = false;\n\n    //// Reactive status\n    this.currentStatus = {\n      status: 'connecting',\n      connected: false,\n      retryCount: 0\n    };\n\n    if (Package.tracker) {\n      this.statusListeners = new Package.tracker.Tracker.Dependency();\n    }\n\n    this.statusChanged = () => {\n      if (this.statusListeners) {\n        this.statusListeners.changed();\n      }\n    };\n\n    //// Retry logic\n    this._retry = new Retry();\n    this.connectionTimer = null;\n  }\n\n  // Trigger a reconnect.\n  reconnect(options) {\n    options = options || Object.create(null);\n\n    if (options.url) {\n      this._changeUrl(options.url);\n    }\n\n    if (options._sockjsOptions) {\n      this.options._sockjsOptions = options._sockjsOptions;\n    }\n\n    if (this.currentStatus.connected) {\n      if (options._force || options.url) {\n        this._lostConnection(forcedReconnectError);\n      }\n      return;\n    }\n\n    // if we're mid-connection, stop it.\n    if (this.currentStatus.status === 'connecting') {\n      // Pretend it's a clean close.\n      this._lostConnection();\n    }\n\n    this._retry.clear();\n    this.currentStatus.retryCount -= 1; // don't count manual retries\n    this._retryNow();\n  }\n\n  disconnect(options) {\n    options = options || Object.create(null);\n\n    // Failed is permanent. If we're failed, don't let people go back\n    // online by calling 'disconnect' then 'reconnect'.\n    if (this._forcedToDisconnect) return;\n\n    // If _permanent is set, permanently disconnect a stream. Once a stream\n    // is forced to disconnect, it can never reconnect. This is for\n    // error cases such as ddp version mismatch, where trying again\n    // won't fix the problem.\n    if (options._permanent) {\n      this._forcedToDisconnect = true;\n    }\n\n    this._cleanup();\n    this._retry.clear();\n\n    this.currentStatus = {\n      status: options._permanent ? 'failed' : 'offline',\n      connected: false,\n      retryCount: 0\n    };\n\n    if (options._permanent && options._error)\n      this.currentStatus.reason = options._error;\n\n    this.statusChanged();\n  }\n\n  // maybeError is set unless it's a clean protocol-level close.\n  _lostConnection(maybeError) {\n    this._cleanup(maybeError);\n    this._retryLater(maybeError); // sets status. no need to do it here.\n  }\n\n  // fired when we detect that we've gone online. try to reconnect\n  // immediately.\n  _online() {\n    // if we've requested to be offline by disconnecting, don't reconnect.\n    if (this.currentStatus.status != 'offline') this.reconnect();\n  }\n\n  _retryLater(maybeError) {\n    var timeout = 0;\n    if (this.options.retry ||\n        maybeError === forcedReconnectError) {\n      timeout = this._retry.retryLater(\n        this.currentStatus.retryCount,\n        this._retryNow.bind(this)\n      );\n      this.currentStatus.status = 'waiting';\n      this.currentStatus.retryTime = new Date().getTime() + timeout;\n    } else {\n      this.currentStatus.status = 'failed';\n      delete this.currentStatus.retryTime;\n    }\n\n    this.currentStatus.connected = false;\n    this.statusChanged();\n  }\n\n  _retryNow() {\n    if (this._forcedToDisconnect) return;\n\n    this.currentStatus.retryCount += 1;\n    this.currentStatus.status = 'connecting';\n    this.currentStatus.connected = false;\n    delete this.currentStatus.retryTime;\n    this.statusChanged();\n\n    this._launchConnection();\n  }\n\n  // Get current status. Reactive.\n  status() {\n    if (this.statusListeners) {\n      this.statusListeners.depend();\n    }\n    return this.currentStatus;\n  }\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"74de3a2cf6e71206261f2706e8ecaba38a51d7e1"}
