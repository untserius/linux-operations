{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/autoupdate/client_versions.js","filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/serius/Desktop/Practicals/Projects/todo","root":"/home/serius/Desktop/Practicals/Projects/todo","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true},"externalDependencies":[]},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.17.2","helpers":true,"useESModules":false,"corejs":false},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true},"externalDependencies":[]},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXFragment":{"exit":[null]},"JSXElement":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false},"externalDependencies":[]},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-class-properties","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null,null]},"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true},"externalDependencies":[]},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{},"externalDependencies":[]},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{},"externalDependencies":[]},{"key":"transform-regenerator","visitor":{"_exploded":{},"_verified":{},"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"MemberExpression":{"enter":[null]}},"options":{},"externalDependencies":[]}],"presets":[],"generatorOpts":{"filename":"/home/serius/Desktop/Practicals/Projects/todo/packages/autoupdate/client_versions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/autoupdate/client_versions.js"}},"code":"var _objectSpread;\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\nmodule.export({\n  ClientVersions: function () {\n    return ClientVersions;\n  }\n});\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 0);\nvar ClientVersions = /*#__PURE__*/function () {\n  function ClientVersions() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  var _proto = ClientVersions.prototype;\n  _proto.createStore = function () {\n    function createStore() {\n      var _this = this;\n      return {\n        update: function (_ref) {\n          var id = _ref.id,\n            msg = _ref.msg,\n            fields = _ref.fields;\n          if (msg === \"added\" || msg === \"changed\") {\n            _this.set(id, fields);\n          }\n        }\n      };\n    }\n    return createStore;\n  }();\n  _proto.hasVersions = function () {\n    function hasVersions() {\n      return this._versions.size > 0;\n    }\n    return hasVersions;\n  }();\n  _proto.get = function () {\n    function get(id) {\n      return this._versions.get(id);\n    }\n    return get;\n  }() // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  ;\n  _proto.set = function () {\n    function set(id, fields) {\n      var version = this._versions.get(id);\n      var isNew = false;\n      if (version) {\n        Object.assign(version, fields);\n      } else {\n        version = _objectSpread({\n          _id: id\n        }, fields);\n        isNew = true;\n        this._versions.set(id, version);\n      }\n      this._watchCallbacks.forEach(function (_ref2) {\n        var fn = _ref2.fn,\n          filter = _ref2.filter;\n        if (!filter || filter === version._id) {\n          fn(version, isNew);\n        }\n      });\n    }\n    return set;\n  }() // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  ;\n  _proto.watch = function () {\n    function watch(fn) {\n      var _this2 = this;\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        skipInitial = _ref3.skipInitial,\n        filter = _ref3.filter;\n      if (!skipInitial) {\n        var resolved = Promise.resolve();\n        this._versions.forEach(function (version) {\n          if (!filter || filter === version._id) {\n            resolved.then(function () {\n              return fn(version, true);\n            });\n          }\n        });\n      }\n      var callback = {\n        fn: fn,\n        filter: filter\n      };\n      this._watchCallbacks.add(callback);\n      return function () {\n        return _this2._watchCallbacks.delete(callback);\n      };\n    }\n    return watch;\n  }() // A reactive data source for `Autoupdate.newClientAvailable`.\n  ;\n  _proto.newClientAvailable = function () {\n    function newClientAvailable(id, fields, currentVersion) {\n      function isNewVersion(version) {\n        return version._id === id && fields.some(function (field) {\n          return version[field] !== currentVersion[field];\n        });\n      }\n      var dependency = new Tracker.Dependency();\n      var version = this.get(id);\n      dependency.depend();\n      var stop = this.watch(function (version) {\n        if (isNewVersion(version)) {\n          dependency.changed();\n          stop();\n        }\n      }, {\n        skipInitial: true\n      });\n      return !!version && isNewVersion(version);\n    }\n    return newClientAvailable;\n  }();\n  return ClientVersions;\n}();","map":{"version":3,"names":["_objectSpread","module","link","default","v","export","ClientVersions","Tracker","_versions","Map","_watchCallbacks","Set","createStore","update","id","msg","fields","set","hasVersions","size","get","version","isNew","Object","assign","_id","forEach","fn","filter","watch","skipInitial","resolved","Promise","resolve","then","callback","add","delete","newClientAvailable","currentVersion","isNewVersion","some","field","dependency","Dependency","depend","stop","changed"],"sources":["packages/autoupdate/client_versions.js"],"sourcesContent":["import { Tracker } from \"meteor/tracker\";\n\nexport class ClientVersions {\n  constructor() {\n    this._versions = new Map();\n    this._watchCallbacks = new Set();\n  }\n\n  // Creates a Livedata store for use with `Meteor.connection.registerStore`.\n  // After the store is registered, document updates reported by Livedata are\n  // merged with the documents in this `ClientVersions` instance.\n  createStore() {\n    return {\n      update: ({ id, msg, fields }) => {\n        if (msg === \"added\" || msg === \"changed\") {\n          this.set(id, fields);\n        }\n      }\n    };\n  }\n\n  hasVersions() {\n    return this._versions.size > 0;\n  }\n\n  get(id) {\n    return this._versions.get(id);\n  }\n\n  // Adds or updates a version document and invokes registered callbacks for the\n  // added/updated document. If a document with the given ID already exists, its\n  // fields are merged with `fields`.\n  set(id, fields) {\n    let version = this._versions.get(id);\n    let isNew = false;\n\n    if (version) {\n      Object.assign(version, fields);\n    } else {\n      version = {\n        _id: id,\n        ...fields\n      };\n\n      isNew = true;\n      this._versions.set(id, version);\n    }\n\n    this._watchCallbacks.forEach(({ fn, filter }) => {\n      if (! filter || filter === version._id) {\n        fn(version, isNew);\n      }\n    });\n  }\n\n  // Registers a callback that will be invoked when a version document is added\n  // or changed. Calling the function returned by `watch` removes the callback.\n  // If `skipInitial` is true, the callback isn't be invoked for existing\n  // documents. If `filter` is set, the callback is only invoked for documents\n  // with ID `filter`.\n  watch(fn, { skipInitial, filter } = {}) {\n    if (! skipInitial) {\n      const resolved = Promise.resolve();\n\n      this._versions.forEach((version) => {\n        if (! filter || filter === version._id) {\n          resolved.then(() => fn(version, true));\n        }\n      });\n    }\n\n    const callback = { fn, filter };\n    this._watchCallbacks.add(callback);\n\n    return () => this._watchCallbacks.delete(callback);\n  }\n\n  // A reactive data source for `Autoupdate.newClientAvailable`.\n  newClientAvailable(id, fields, currentVersion) {\n    function isNewVersion(version) {\n      return (\n        version._id === id &&\n        fields.some((field) => version[field] !== currentVersion[field])\n      );\n    }\n\n    const dependency = new Tracker.Dependency();\n    const version = this.get(id);\n\n    dependency.depend();\n\n    const stop = this.watch(\n      (version) => {\n        if (isNewVersion(version)) {\n          dependency.changed();\n          stop();\n        }\n      },\n      { skipInitial: true }\n    );\n\n    return !! version && isNewVersion(version);\n  }\n}\n"],"mappings":"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"},"sourceType":"module","externalDependencies":{},"hash":"c6fef09c6d13993484761c68dad5eff4535621e5"}
